(function (a) {
    var b = {
        init: function (b) {
            var c = a.extend(true, {
                automatic: {
                    enabled: false,
                    delay: 5e3,
                    direction: "front"
                },
                movement: {
                    speed: 300,
                    number: 1
                },
                controllers: null,
                automaticHover: {
                    enabled: false,
                    delay: 500
                },
                items: a("li", this),
                _addSize: {
                    hr: 0,
                    vr: 0
                },
                _moving: null,
                _automatic: null
            }, b);
            return this.each(function () {
                a(this).data("slidingSettings", c);
                if (c.items.length) a(this).SlidingShow("setup");
                else {
                    a(this).hide();
                    a(this).SlidingShow("hide", "controllers")
                }
            })
        },
        hide: function (a) {
            var b = this.data("slidingSettings");
            if (a && b[a]) b[a].hide()
        },
        show: function (a) {
            var b = this.data("slidingSettings");
            if (a && b[a]) b[a].show()
        },
        setup: function () {
            a(this).show();
            this.SlidingShow("build");
            this.SlidingShow("start")
        },
        build: function () {
            var b = this.data("slidingSettings");
            var g = this.data("SliderContainer");
            var f = g.items.first();
            var c = b.controllers;
            var d = b.items.first();
            if (!isNaN(d.css("margin-left").replace("px", ""))) b._addSize.hr += parseInt(d.css("margin-left").replace("px", ""));
            if (!isNaN(d.css("margin-right").replace("px", ""))) b._addSize.hr += parseInt(d.css("margin-right").replace("px", ""));
            if (!isNaN(d.css("padding-left").replace("px", ""))) b._addSize.hr += parseInt(d.css("padding-left").replace("px", ""));
            if (!isNaN(d.css("padding-right").replace("px", ""))) b._addSize.hr += parseInt(d.css("padding-right").replace("px", ""));
            if (!isNaN(d.css("border-left-width").replace("px", ""))) b._addSize.hr += parseInt(d.css("border-left-width").replace("px", ""));
            if (!isNaN(d.css("border-right-width").replace("px", ""))) b._addSize.hr += parseInt(d.css("border-right-width").replace("px", ""));
            if (!isNaN(d.css("margin-top").replace("px", ""))) b._addSize.vr += parseInt(d.css("margin-top").replace("px", ""));
            if (!isNaN(d.css("margin-bottom").replace("px", ""))) b._addSize.vr += parseInt(d.css("margin-bottom").replace("px", ""));
            if (!isNaN(d.css("padding-top").replace("px", ""))) b._addSize.vr += parseInt(d.css("padding-top").replace("px", ""));
            if (!isNaN(d.css("padding-bottom").replace("px", ""))) b._addSize.vr += parseInt(d.css("padding-bottom").replace("px", ""));
            if (!isNaN(d.css("border-top-width").replace("px", ""))) b._addSize.vr += parseInt(d.css("border-top-width").replace("px", ""));
            if (!isNaN(d.css("border-bottom-width").replace("px", ""))) b._addSize.vr += parseInt(d.css("border-bottom-width").replace("px", ""));
            var e = {
                width: d.outerWidth(),
                height: f.height()
            };
            this.css({
                width: (e.width + b._addSize.hr) * b.items.length + "px",
                cursor: "pointer"
            });
            b.items.css({
                cssFloat: "left",
                styleFloat: "left",
                display: "block",
                queue: false
            });
            if (c && a("li", c).length == 2) {
                var f = this;
                a("li", c).css("cursor", "pointer").each(function (c) {
                    var d = Boolean(c) ? "front" : "back";
                    if (!b.automaticHover.enabled) a(this).on("click", function () {
                        f.SlidingShow("move", d)
                    });
                    else {
                        a(this).on("mouseover", function () {
                            f.SlidingShow("swapautohover", "set");
                            f.SlidingShow("move", d)
                        });
                        a(this).on("mouseout", function () {
                            f.SlidingShow("swapautohover", "reset")
                        })
                    }
                });
                if (parseInt(this.css("width").replace("px", "")) <= parseInt(this.parent().css("width").replace("px", ""))) this.SlidingShow("hide", "controllers");
                else this.SlidingShow("show", "controllers")
            }
        },
        swapautohover: function (b) {
            var c = this.data("slidingSettings");
            if (b == "set") {
                c = a.extend(true, c, {
                    _automatic: c.automatic
                });
                c.automatic.enabled = true;
                c.automatic.delay = c.automaticHover.delay
            } else if (b == "reset") {
                if (c._moving) clearTimeout(c._moving);
                c = a.extend(true, c, {
                    automatic: c._automatic
                })
            }
        },
        start: function (a) {
            var b = this.data("slidingSettings");
            if (b.automatic.enabled) {
                var c = this;
                b._moving = setTimeout(function () {
                    c.SlidingShow("move", !a ? b.automatic.direction : a)
                }, b.automatic.delay)
            }
        },
        move: function (a) {
            var b = this.data("slidingSettings");
            this.SlidingShow("move" + (!a ? b.automatic.direction : a))
        },
        movefront: function () {
            var b = this.data("slidingSettings");
            this.stop();
            if (b._moving) clearTimeout(b._moving);
            var c = this;
            var d = function () {
                var d = b.items.filter(":lt(" + b.movement.number + ")");
                d.parent().append(d);
                b.items = a(b.items.selector);
                c.css({
                    marginLeft: "0px"
                });
                c.SlidingShow("start", "front")
            };
            var e = b.items.first().outerWidth();
            e += b._addSize.hr;
            e *= b.movement.number;
            var f = (e + parseInt(this.css("margin-left").replace("px", ""))) / e * b.movement.speed;
            this.animate({
                marginLeft: 0 - e + "px"
            }, {
                duration: f,
                easing: "swing",
                complete: d,
                queue: true
            })
        },
        moveback: function () {
            var b = this.data("slidingSettings");
            this.stop();
            if (b._moving) clearTimeout(b._moving);
            var c = this;
            var d = b.items.first().outerWidth();
            d += b._addSize.hr;
            d *= b.movement.number;
            var e = function () {
                c.SlidingShow("start", "back")
            };
            if (this.css("margin-left") == "0px") {
                var f = b.items.filter(":gt(" + (b.items.length - b.movement.number - 1) + ")");
                b.items.first().before(f);
                b.items = a(b.items.selector);
                this.css({
                    marginLeft: d * -1 + "px"
                })
            }
            var g = parseInt(this.css("margin-left").replace("px", "")) * -1 / d * b.movement.speed;
            this.animate({
                marginLeft: "0px"
            }, {
                duration: g,
                easing: "swing",
                complete: e,
                queue: false
            })
        }
    };
    a.fn.SlidingShow = function (c) {
        if (b[c]) {
            return b[c].apply(this, Array.prototype.slice.call(arguments, 1))
        } else if (typeof c === "object" || !c) {
            return b.init.apply(this, arguments)
        } else {
            a.error("Method " + c + " does not exist on jQuery.SlidingShow")
        }
    }
    var $kts = jQuery.noconflicl
})(jQuery)